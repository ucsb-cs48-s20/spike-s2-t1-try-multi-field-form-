{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/leena/Documents/cs48/next-learn-demo/spike-s2-t1-try-multi-field-form-/components/SleepAndMoodForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SleepAndMoodForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(SleepAndMoodForm, _React$Component);\n\n  var _super = _createSuper(SleepAndMoodForm);\n\n  function SleepAndMoodForm(props) {\n    var _this;\n\n    _classCallCheck(this, SleepAndMoodForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sleep: '0 hour(s)',\n      mood: 'okay'\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SleepAndMoodForm, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('You recorded ' + this.state.sleep + ' of sleep last night and that you were ' + this.state.mood + ' today');\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"How many hours of sleep did you have?\", __jsx(\"select\", {\n        name: \"sleep\",\n        value: this.state.sleep,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"0 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, \"0 hour(s)\"), __jsx(\"option\", {\n        value: \"1 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, \"1 hour(s)\"), __jsx(\"option\", {\n        value: \"2 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, \"2 hour(s)\"), __jsx(\"option\", {\n        value: \"3 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, \"3 hour(s)\"), __jsx(\"option\", {\n        value: \"4 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, \"4 hour(s)\"), __jsx(\"option\", {\n        value: \"5 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, \"5 hour(s)\"), __jsx(\"option\", {\n        value: \"6 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, \"6 hour(s)\"), __jsx(\"option\", {\n        value: \"7 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, \"7 hour(s)\"), __jsx(\"option\", {\n        value: \"8 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"8 hour(s)\"), __jsx(\"option\", {\n        value: \"9 hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"9 hour(s)\"), __jsx(\"option\", {\n        value: \"10+ hour(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, \"10+ hour(s)\"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }), __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"How are you feeling today?\", __jsx(\"select\", {\n        value: this.state.mood,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"happy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \":)\"), __jsx(\"option\", {\n        value: \"okay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, \":|\"), __jsx(\"option\", {\n        value: \"sad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, \":'(\"), __jsx(\"option\", {\n        value: \"angry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, \">:(\"))), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return SleepAndMoodForm;\n}(React.Component);\n\nexport default SleepAndMoodForm;","map":{"version":3,"sources":["/Users/leena/Documents/cs48/next-learn-demo/spike-s2-t1-try-multi-field-form-/components/SleepAndMoodForm.js"],"names":["SleepAndMoodForm","props","state","sleep","mood","handleInputChange","bind","handleSubmit","event","target","value","name","setState","alert","preventDefault","React","Component"],"mappings":"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","sourcesContent":["class SleepAndMoodForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {sleep: '0 hour(s)', mood:'okay'};\n  \n      this.handleInputChange = this.handleInputChange.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleInputChange(event) {\n      const target = event.target;\n      const value = target.value; \n      const name = target.name;\n\n      this.setState({[name]: value});\n    }\n  \n    handleSubmit(event) {\n      alert('You recorded ' + this.state.sleep+ ' of sleep last night and that you were ' + this.state.mood + ' today');\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            How many hours of sleep did you have?\n            <select name = \"sleep\" value={this.state.sleep} onChange={this.handleInputChange}>\n              <option value=\"0 hour(s)\">0 hour(s)</option>\n              <option value=\"1 hour(s)\">1 hour(s)</option>\n              <option value=\"2 hour(s)\">2 hour(s)</option>\n              <option value=\"3 hour(s)\">3 hour(s)</option>\n              <option value=\"4 hour(s)\">4 hour(s)</option>\n              <option value=\"5 hour(s)\">5 hour(s)</option>\n              <option value=\"6 hour(s)\">6 hour(s)</option>\n              <option value=\"7 hour(s)\">7 hour(s)</option>\n              <option value=\"8 hour(s)\">8 hour(s)</option>\n              <option value=\"9 hour(s)\">9 hour(s)</option>\n              <option value=\"10+ hour(s)\">10+ hour(s)</option>\n\n            </select>\n          </label>\n          <br></br>\n          <label>\n            How are you feeling today? \n            <select value={this.state.mood} onChange={this.handleInputChange}>\n              <option value=\"happy\">:)</option>\n              <option value=\"okay\">:|</option>\n              <option value=\"sad\">:'(</option>\n              <option value=\"angry\">>:(</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n  export default SleepAndMoodForm;"]},"metadata":{},"sourceType":"module"}